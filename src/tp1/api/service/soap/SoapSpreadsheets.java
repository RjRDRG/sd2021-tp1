package tp1.api.service.soap;

import jakarta.jws.WebService;
import jakarta.ws.rs.QueryParam;
import tp1.api.Spreadsheet;

@WebService(serviceName=SoapSpreadsheets.NAME, targetNamespace=SoapSpreadsheets.NAMESPACE, endpointInterface=SoapSpreadsheets.INTERFACE)
public interface SoapSpreadsheets {
	
	static final String NAME = "spreadsheets";
	static final String NAMESPACE = "http://sd2021";
	static final String INTERFACE = "tp1.api.service.soap.SoapSpreadsheets";

	/**
	 * Creates a new spreadsheet. The sheetId and sheetURL are generated by the server.
	 * @param sheet - the spreadsheet to be created.
	 * @param password - the password of the owner of the spreadsheet.
	 *
	 */
	String createSpreadsheet(Spreadsheet sheet, String password );

	
	/**
	 * Deletes a spreadsheet.
	 * @param sheetId - the sheet to be deleted.
	 * @param password - the password of the owner of the spreadsheet.
	 *
	 */
	void deleteSpreadsheet(String sheetId, String password);

	/**
	 * Retrieve a spreadsheet.
	 * 	
	 * @param sheetId - The  spreadsheet being retrieved.
	 * @param userId - The user performing the operation.
	 * @param password - The password of the user performing the operation.
	 *
	 */
	Spreadsheet getSpreadsheet(String sheetId , String userId, String password);

	/**
	 * Retrieve a spreadsheet.
	 *
	 * @param sheetId - The  spreadsheet being retrieved.
	 * @param userId - The user performing the operation.
	 * @param range - The range of requested values.
	 *
	 */
	String[][] getReferencedSpreadsheetValues(String sheetId , String userId, String range);
		
	
	/**
	 * 
	 * Adds a new user to the list of shares of a spreadsheet.
	 * 
	 * @param sheetId - the sheet being shared.
	 * @param userId - the user that is being added to the list of shares.
	 * @param password - The password of the owner of the spreadsheet.
	 *
	 */
	void shareSpreadsheet( String sheetId, String userId, String password);

	
	/**
	 * Removes a user from the list of shares of a spreadsheet.
	 * 
	 * @param sheetId - the sheet being shared.
	 * @param userId - the user that is being removed from the list of shares.
	 * @param password - The password of the owner of the spreadsheet.
	 *
	 */
	void unshareSpreadsheet( String sheetId, String userId, String password);

	
	/**
	 * Updates the raw values of some cells of a spreadsheet. 
	 * 
	 * @param userId - The user performing the update.
	 * @param sheetId - the spreadsheet whose values are being retrieved.
	 * @param cell - the cell being updated
	 * @param rawValue - the new raw value of the cell
	 * @param password - the password of the owner of the spreadsheet
	 *
	 **/
	void updateCell( String sheetId, String cell, String rawValue, String userId, String password);

	
	/**
	 * Retrieves the calculated values of a spreadsheet.
	 * @param userId - The user requesting the values
	 * @param sheetId - the spreadsheet whose values are being retrieved.
	 * @param password - the password of the owner of the spreadsheet
	 *
	 */
	String[][] getSpreadsheetValues(String sheetId, String userId, String password);
}
